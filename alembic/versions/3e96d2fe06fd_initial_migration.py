"""Initial migration

Revision ID: 3e96d2fe06fd
Revises: 
Create Date: 2025-06-23 12:37:24.650189

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy.vector


# revision identifiers, used by Alembic.
revision: str = '3e96d2fe06fd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("CREATE EXTENSION IF NOT EXISTS vector;")
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('genre', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('game_vibes', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('mechanics', sa.String(), nullable=True),
    sa.Column('visual_style', sa.String(), nullable=True),
    sa.Column('emotional_fit', sa.String(), nullable=True),
    sa.Column('mood_tags', sa.JSON(), nullable=True),
    sa.Column('game_embedding', pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True),
    sa.Column('mood_embedding', pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True),
    sa.PrimaryKeyConstraint('game_id')
    )
    op.create_table('mood_cluster',
    sa.Column('mood', sa.String(), nullable=False),
    sa.Column('game_tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True),
    sa.PrimaryKeyConstraint('mood')
    )
    op.create_index(op.f('ix_mood_cluster_mood'), 'mood_cluster', ['mood'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('platform', sa.Enum('WhatsApp', 'Discord', 'Telegram', 'Steam', 'Xbox', 'PlayStation', name='platformenum'), nullable=True),
    sa.Column('first_seen', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_seen', sa.TIMESTAMP(), nullable=True),
    sa.Column('trust_score', sa.Float(), nullable=True),
    sa.Column('genre_interest', sa.JSON(), nullable=True),
    sa.Column('platform_preference', sa.String(), nullable=True),
    sa.Column('game_vibe', sa.JSON(), nullable=True),
    sa.Column('mood_history', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('game_platforms',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('game_id', sa.String(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sessions',
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('entry_mood', sa.String(), nullable=True),
    sa.Column('exit_mood', sa.String(), nullable=True),
    sa.Column('game_recs_sent', sa.JSON(), nullable=True),
    sa.Column('user_feedback', sa.String(), nullable=True),
    sa.Column('state', sa.Enum('ONBOARDING', 'ACTIVE', 'PASSIVE', 'COLD', name='sessiontypeenum'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_table('interactions',
    sa.Column('interaction_id', sa.String(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('sender', sa.Enum('User', 'Thrum', name='senderenum'), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('mood_tag', sa.String(), nullable=True),
    sa.Column('tone_tag', sa.String(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('response_type', sa.Enum('GameRec', 'Callback', 'ReEntry', 'IdleChat', name='responsetypeenum'), nullable=True),
    sa.Column('session_type', sa.Enum('ONBOARDING', 'ACTIVE', 'PASSIVE', 'COLD', name='sessiontypeenum'), nullable=True),
    sa.Column('game_id', sa.String(), nullable=True),
    sa.Column('bot_response_metadata', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.game_id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.session_id'], ),
    sa.PrimaryKeyConstraint('interaction_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('interactions')
    op.drop_table('sessions')
    op.drop_table('game_platforms')
    op.drop_table('users')
    op.drop_index(op.f('ix_mood_cluster_mood'), table_name='mood_cluster')
    op.drop_table('mood_cluster')
    op.drop_table('games')
    # ### end Alembic commands ###
