"""Fresh migration after enum fix

Revision ID: 8c1a1ff64be4
Revises: 
Create Date: 2025-06-13 13:00:23.829080

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8c1a1ff64be4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

response_type_enum = sa.Enum(
    "GameRec", "Callback", "ReEntry", "IdleChat",
    name="responsetypeenum"
)

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('interactions', sa.Column('response_type', sa.Enum('GameRec', 'Callback', 'ReEntry', 'IdleChat', name='responsetypeenum'), nullable=True))
    op.drop_constraint(op.f('users_phone_number_key'), 'users', type_='unique')
    op.drop_column('users', 'phone_number')
    # ### end Alembic commands ###
    response_type_enum.create(op.get_bind())  # âœ… explicitly create enum
    op.add_column("interactions", sa.Column("response_type", response_type_enum, nullable=True))


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_unique_constraint(op.f('users_phone_number_key'), 'users', ['phone_number'], postgresql_nulls_not_distinct=False)
    op.drop_column('interactions', 'response_type')
    # ### end Alembic commands ###
    op.drop_column("interactions", "response_type")
    response_type_enum.drop(op.get_bind())
